@use "colours" as *;
@use '../utils/grid' as *;
@use '../base/typography' as *;



@mixin shorttransition {
    -webkit-transition: (.2s);
    -moz-transition: (.2s);
    -ms-transition: (.2s);
    -o-transition: (.2s);
    transition: (.2s);
}

@mixin transition {
    -webkit-transition: (.4s);
    -moz-transition: (.4s);
    -ms-transition: (.4s);
    -o-transition: (.4s);
    transition: (.4s);
}

@mixin longtransition {
    -webkit-transition: (0.8s);
    -moz-transition: (0.8s);
    -ms-transition: (0.8s);
    -o-transition: (0.8s);
    transition: (0.8s);
}

@mixin extralongtransition {
    -webkit-transition: (2s);
    -moz-transition: (2s);
    -ms-transition: (2s);
    -o-transition: (2s);
    transition: (2s);
}

@mixin easeintransition{
    transition: all 0.2s cubic-bezier(0.55, 0, 1, 1);
}


/* Percentage values */

$v100: 100%;
$v95: 95%;
$v90: 90%;
$v85: 85%;
$v80: 80%;
$v75: 75%;
$v70: 70%;
$v65: 65%;
$v60: 60%;
$v55: 55%;
$v50: 50%;
$v45: 45%;
$v40: 40%;
$v35: 35%;
$v30: 30%;
$v25: 25%;
$v20: 20%;
$v15: 15%;
$v10: 10%;
$v5: 5%;
$v0: 0;
$auto: auto;
$zeroauto: 0 auto;

/* Pixel values */

$px0: 0;
$px5: 5px;
$px10: 10px;
$px15: 15px;
$px20: 20px;
$px25: 25px;
$px30: 30px;
$px35: 35px;
$px40: 40px;
$px45: 45px;
$px50: 50px;
$px55: 55px;
$px60: 60px;
$px65: 65px;
$px70: 70px;
$px75: 75px;
$px80: 80px;
$px85: 85px;
$px90: 90px;
$px95: 95px;
$px100: 100px;

/* Grid based width */

$onehalf: 48%;
$onethird: 30.66%;
$twothirds: 65.33%;
$onefourth: 22%;
$threefourths: 74%;
$onefifth: 16.8%;
$twofifths: 37.6%;
$threefifths: 58.4%;
$fourfifths: 82.67%;
$onesixth: 13.33%;
$fivesixths: 82.67%;
$gridmargin:  0 4% 0 0;
$last: 0 0 0 0;


/* Container values */

$calcwidth: calc(100% - 160px);
$calcpad: $px0 $px80;
$perwidth: $v90;
$perpad: $px0 $v5;

$bigcalcwidth: calc(100% - 200px);
$bigcalcpad: $px0 $px100;
$bigperwidth: $v80;
$bigperpad: $px0 $v10;


/* #Borders
================================================== */

@mixin border_radius {
    border-radius: 0.13636rem;
    // overflow: hidden;
}

@mixin border_radius_small {
    border-radius: 10px;
    // overflow: hidden;
}

@mixin border_radius_top {
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    overflow: hidden;
}

@mixin border_radius_bottom {
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

// option to overwrite for portfolio inner pages.
@mixin border_radius_none {
    border-radius: 0px;
}

@mixin border_all {
    border: 1px solid black;
    overflow: hidden;
}


/* # Global Styles
================================================== */
// cursor: url(./assets/images/svg/darkgrey-circle.svg), pointer;

// 
// page transitions
//
// html.is-changing .transition-main {
//     transition: transform 400ms ease-in-out;
// }

// html.is-animating.is-leaving .transition-main {
// transform: translateY(calc(1 * 5vh * var(--overlay-direction, 1)));
// }

// html.is-animating.is-rendering .transition-main {
// transform: translateY(calc(-1 * 5vh * var(--overlay-direction, 1)));
// }

.transition-swipe {
    position: fixed;
    top: 0px;
    left: -24vw;
    width: 150vw;
    height: 200vh;
    // background-color: grey;
    background: linear-gradient(to bottom, transparent, transparent 10%, #FC004C 10%, #FC004C 90%, transparent 90%, transparent), radial-gradient(0% 50% at top right, transparent 99%, #FC004C);
    opacity: 1;
    border-radius: 40%;
    transform: translateY(-15%);
    pointer-events: none;
    z-index: 99;
    @include longtransition;
    &.on_load {
        transform: translateY(-100%);
        @include longtransition;
    }
}

html.is-changing .transition-swipe {
    @include longtransition;
    z-index: 99;
    opacity: 1;

}

html.is-animating .transition-swipe {
    transform: translateY(-15%);
    @include longtransition;
}

html.is-rendering {
    background-color: black;
    .transition-swipe {
        transform: translateY(-15%);
        @include longtransition;
    }
}


// html.is-changing .transition-fade {
//     opacity: 1;
//     @include transition;
// }
// /* Define the styles for the unloaded pages */
// html.is-animating .transition-fade {
//     opacity: 0;
//     @include transition;
// }

// .transition-swipe {
//     opacity: 1;
//     @include transition;
// }

// .transition-swipe {
//     @include longtransition;
//     transform: scaleX(0);
// }
/* Define the styles for the unloaded pages */
// html.is-animating .transition-swipe {
//     transform: scaleX(1);
//     @include transition;
// }



  
// html.is-leaving .transition-swipe {
//     opacity: 1;
//     z-index: 99;
//     transform: translateY(0%);
//     @include transition;
// }

body {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
    overflow-x: hidden;
    opacity: 1;
    transition: opacity 0.5s ease-in-out;
}





@mixin sections_padding_small {
    padding: 5vw 0;

    @include respond-to(xl){
        padding: 3vw 0;
    }


}



@mixin sections_padding {
    padding: 7vw 0;

    @include respond-to(lg){
        padding: 6vw 0;
    }
    @include respond-to(xl){
        padding: 5vw 0;
    }

}

@mixin sections_padding_large {

    padding: calc($conpad * 8) 0;
}

@mixin title_bar {
    padding-bottom: 5px;
    @include respond-to('md') {
        padding-bottom: 8px;
    }
    .title_bar_border {
        border-top: solid 1px $grey;
        width: 0%;
        height: 2px;
        @include longtransition;
        &.extended {
            width: 100%;
            @include longtransition;
        }
    }
}
@mixin title_box {
    padding-bottom: 20px;
    .title_wrap {
        .small_title {
            padding-bottom: 20px;
        }
        // styles without the glance box
        .big_title {
            padding-bottom: 20px;
        }
        @include respond-to('lg') {
            max-width: 64%;
        }
        // styles with the glance box
        &.title_box_grid {
            display: grid;
            grid-template-columns: 1fr 2.5fr;
            gap: 20px;
            max-width: 100%;

            @include respond-to('md') {
                grid-template-columns: 1fr 0.5fr;
                grid-template-rows: 0.1fr 1fr;
                gap: 0px;
                margin-bottom: 40px;
            }

            .title {
                @include respond-to('sm') {
                    grid-column: 1 / span 2;
                }
            }
        }
    }

}

// tool: remove all margins (use for ul, li etc.)
@mixin remove_margins {
	margin: 0;
}

/* #Container
================================================== */

// splits the screen into 32 columns
// $conpad : 3.125vw;
// splits the screen into 64 columns
$conpad : 1.5625vw;

@mixin bigcontainer {
    width: 94vw;
    position: relative;
    margin: $zeroauto;

}

@mixin container {
    
    width: 90vw;
    position: relative;
    margin: $zeroauto;

    
}

@mixin mediumcontainer {
    width: 84vw;
    margin: $zeroauto;


}

@mixin smallcontainer {
    width: 78vw;
    margin: $zeroauto;

}

@mixin extrasmallcontainer {
    width: 55vw;
    margin: $zeroauto;

}

@mixin containerleft {
    width: 95vw;
    margin-right: auto;
    margin-left: 0;
    position: relative;
}

@mixin containerright {
    width: 95vw;
    position: relative;
    margin-left: auto;
    margin-right: 0;
}

.container {
    @include container;
}

.container_small {
    @include smallcontainer;
}

.container_extra_small {
    @include extrasmallcontainer;
}
.container_medium {
    @include mediumcontainer;
}

.container_big{
    @include bigcontainer;
}

.container_left{
    @include containerleft;
}

.container_right{
    @include containerright;
}



/* #Menus
================================================== */

/* Desktop dropdowns */

@mixin dropdown_full_width {
    .dropdown_full_width {
        opacity: 0;
        visibility: hidden;
        // make an absolutely positioned version of this also!
        position: fixed;
        // todo: somehow make this dynamic so that it 'sticks' to header
        top: 70px;
        left: 0;
        width: 100%;
        z-index: 10000;
        .container{
            .dropdown_wrap{
                background-color: $offwhite;
                border: 2px solid black;
                padding: 50px;
                @include border_radius;
                .top_level_button{
                    width: auto;
                    margin-bottom: 50px;
                }
                .dropdown_list{
                    display: flex;
                    flex-wrap: wrap;
                    gap: 40px;
                    justify-content: start;
                    &.icons_nav{
                        a {
                            max-width: 350px;
                            font-size: 32;
                        }
                        img{
                            max-width: 80px;
                            min-height: 90px;
                        }
                    }
                }
            }
        }
    }
}

@mixin dropdown_rel_top_level {
    .dropdown_rel {
        opacity: 0;
        visibility: hidden;
        position: absolute;
        top: 22px;
        left: 0;
        width: 200px;
        z-index: 10000;
        padding-top: 10px;
        .dropdown_wrap{
            background-color: $offwhite;
            border: 2px solid black;
            padding: 10px;
            @include border_radius;
            .dropdown_list{
                display: flex;
                flex-wrap: wrap;
                gap: 20px;
                justify-content: start;
                a {
                    max-width: 350px;
                    font-size: 32;
                    flex-basis: 100%;
                }
                &.icons_nav{
                    img{
                        max-width: 80px;
                        min-height: 90px;
                    }
                }
            }
        }
    }
}

/* Side/Modal Navs */


// todo: add modal menu here!




/* #Page Headers
================================================== */

// these are stored here because the same styles are used on multiple pages in hard code,
// e.g. archive pages and single pages.

@mixin page_header {
    width: 100%;
    height: 70vh;
    // position: sticky; // add back in to hold title in place
    top: 0;
    z-index: 0;
    background-size: cover;
    @include border_radius_bottom;
    @include transition;
    @include respond-to('md') {
        height: 90vh;
    }
    &.blur {
        filter: blur(14px);
        @include transition;
    }
    &.index {
        z-index: 0;
    }
    &.small_heading {
        height: auto;
        padding-top: 100px;
        padding-bottom: 24px;
        .title_bar {
            @include title_bar;
        }
        .title_box {
            @include title_box;
        }
        @include respond-to('md') {
            height: 20vh;
        }
        @include respond-to('lg') {
            height: 40vh;
            padding-top: 200px;
            padding-bottom: unset;
        }
    }
    &.remove_sticky {
        position: relative;
    }

    
    // two_columns layout
    .two_columns {
        @include sections_padding;
        display: grid;
        grid-template-columns: 1fr 1fr;
        // the gap is a stand-in for padding.
        gap: 4.545rem;
        .title_wrap {
            padding: 100px 0;
            width: 80%;
        }
        .image_wrap {

        }
    }
    // background image layout
    .background_image {
        .title_wrap {
            display: grid;
            gap: 40px;
            top: 160px;
            position: absolute;
            width: 50%; 
        }
    }
    // editorial layout
    .editorial {
        .title_wrap {
            &.blur {
                filter: blur(30px);
                @include transition;
            }
            text-transform: uppercase;
            display: grid;
            align-items: end;
            position: relative;
            height: 60vh;
            grid-template-rows: 1.2fr 0.5fr;
            .heading_logo_wrap {
                opacity: 0;
                &.reveal {
                    opacity: 1;
                    @include transition;
                }
            }
            .text_body {
                // margin-bottom: 100px;
                margin-right: 10%;
                margin-left: 1%;
                position: relative;
                font-weight: 500;
                @include respond-to('md') {
                    margin-bottom: 24px;
                    margin-right: unset;
                    width: 90%;
                }
            }
            .arrow_down {
                display: none;
                @include respond-to('md') {
                    height: auto;
                    max-width: 20px;
                    display: flex;
                    justify-self: end;
                    position: relative;
                    position: absolute;
                }
            }
            @include respond-to('md') {
                height: 85vh;
                padding-top: unset;
                grid-template-rows: 3fr 0.5fr;
                gap: 50px;
                .text_body {
                    margin-bottom: 6px;
                    position: relative;
                    width: 38%;
                }
                h1 {
                    max-width: 85%;
                }
                .arrow_down {
                    margin-bottom: 0;
                }
            }
            @media (min-width: 1180px) {
                grid-template-columns: 4fr 1.5fr 0.1fr;
                grid-template-rows: unset;
                gap: 100px;
                h1 {
                    max-width: 100%;
                    .word {
                        position: relative; 
                    }
                }
                .text_body {
                    width: 100%;
                }
            }
            @include respond-to('xl') {
                gap: 60px;
            }
            // override styles for home page
            &.homepage_title_wrap {
                @media (min-width: 1180px) {
                    grid-template-columns: 4fr 1.5fr 0.1fr;
                }
                @include respond-to('sm') {
                    h1 {
                        font-size: 5rem;
                    }
                    .arrow_down {
                        display: none;
                        // margin-bottom: 0;
                        // max-width: 20px;
                    }
                }
            }
        }
    }
}


/* #Post Layouts
================================================== */

// standard post slider
@mixin post_slider {
    // todo: slider conditional? - turn into grid if not using slider
    // todo: flex justification on slides
    // todo: post grid patterns! a la CMC
    .slick-track {
        display: inline-flex;
        gap: 20px;   
    }
    
    // putting this outside slick-track means non-slider grids will be styled too
    .grid_cell {
        @include border_radius;
        background-color: $offwhite;
        border: solid 1px black;
        .image_wrapper {
            // todo: make these into percentages
            height: 200px;
        }
        .text_wrapper {
            display: grid;
            gap: 20px;
            padding: 10px;
            @include respond-to('lg') {
                padding: 20px;
            }
            .text_title_wrapper {
                display: flex;
                justify-content: space-between;
                margin-bottom: 40px;
            }
            img {
                max-width: 15%;
            }
        }
    }
}

// same as above, just not a slider (used more for archive pages)
@mixin post_grid {
    // todo: slider conditional? - turn into grid if not using slider
    // todo: flex justification on slides
    // todo: post grid patterns! a la CMC
    @include container;
    display: grid;
    gap: $conpad;
    .grid_cell {
        @include transition;
        @include border_radius_small;
        position: relative;
        &:hover {
            @include transition;
        }
        .slideshow {
            aspect-ratio: 16 / 9;
            position: relative;
            width: 100%;
            height: 80%;
            z-index: 1;
            @include border_radius_small;
            .portfolio_image_wrap {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                opacity: 0;
                visibility: hidden;
                img {
                    object-fit: cover;
                    @include border_radius_small;
                }
                &.show {
                    opacity: 1;
                    visibility: visible;
                }
            }
            &:hover {
                @include transition;
            }
        }
        .overlay_image_wrapper {
            aspect-ratio: 16 / 9;
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            opacity: 1;
            z-index: 2;
            background-position: center;
            background-size: cover;
            @include transition;
            @include border_radius_small;
            &:hover {
                opacity: 0;
                @include transition;
            }
        }
        .text_wrapper {
            position: relative;
            z-index: 1;
            padding: 10px;
            display: grid;
            gap: 16px;
            @include respond-to('lg') {
                padding: 20px 20px 20px 0px;
            }
            .meta_wrapper {
                display: flex;
                gap: 10px;
            }
        }
        .arrow {
            z-index: 1;
            position: absolute;
            bottom: 90px;
            right: -40px;
            width: 300px;
            height: 100px;
            display: none; 
            @include respond-to('md') {
                display: block;
                height: 100px;
            }   
        }
    }
    &.two_columns {
        @include respond-to('md') {
            grid-template-columns: 1fr 1fr;
            gap: $conpad;
        }
    }
    &.three_columns {
        @include respond-to('md') {
            grid-template-columns: 1fr 1fr 1fr;
            gap: $conpad;
        }
    }
    &.four_columns {
        padding-bottom: 60px;
        @include respond-to('md') {
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
        @include respond-to('lg') {
            grid-template-columns: 1fr 1fr 1fr 1fr;
            gap: 20px;
        }
        .grid_cell {
            // overwrite the 6vh of the 2 column grid cells. 
            .overlay_image_wrapper {
                background-size: 140%;
                @include shorttransition;
            }
            .text_wrapper {
                padding-top: 10px;
                display: flex;
                gap: 14px;
                flex-direction: column;
                justify-content: start;
                height: 25%;
                h3 {
                    @include h-four;
                }
                @include respond-to('lg') {
                    justify-content: space-between;
                    height: 30%;
                }
                .meta_wrapper {
                    display: flex;
                    gap: 20px;
                }
            }
            &:hover {
                .overlay_image_wrapper {
                    opacity: 1;
                    background-size: 150%;
                    @include shorttransition;
                }
            }
        }
    }
}

// row layout.
@mixin post_rows {
    display: block;
    .post_row {
        display: block;
        border-top: solid 1px $grey;
        // &:last-child {
        //     border-bottom: solid 1px $grey;
        // }
        .post_row_grid {
            display: grid;
            align-items: center;
            padding: 20px 0;
            gap: 20px;
            @include respond-to('md') {
                grid-template-columns: 1.2fr 0.2fr 1fr;
            }
            @include respond-to('lg') {
                grid-template-columns: 6fr 2fr 5fr;
            }
            .title_col {
                h3 {
                    // @include buttonanchor;
                    font-weight: 300;
                    // @include transition;
                    // &:hover {
                    //     transform: translateX(86px);
                    //     pointer-events: none;
                    // }
                    // &:before {
                    //     left: -90px;
                    // }
                }
            }
            .meta_col {
                display: flex;
                gap: 12px;
                .jobs_meta_wrap {
                    display: flex;
                    gap: 40px;
                    h6 {
                        white-space: nowrap;
                        border: none;
                        padding: 0px;
                    }
                }
            }
            .link_col {
                justify-self: end;
            }
            .images_wrap {
                // hide on mobile screens
                display: none;
                @include respond-to('md') {
                    display: flex;
                    justify-content: end;
                    align-items: center;
                    gap: 20px;
                    @include transition;
                    .image_wrap {
                        opacity: 0;
                        img {
                            height: 80px;
                            width: 120px;
                        }
                    }
                }
            } 
        }
        // todo: animation delays on the images upon hover?
        &:hover {
            background-color: grey;

            // Loop to apply animation delays to each .image_wrap
            @for $i from 2 through 24 {
                .image_wrap:nth-child(#{$i}) {
                    @include fade_in_delay(0.1s * $i);
                }
            }

            .image_wrap {
                opacity: 0;
                @include transition;
                &.visible {
                    opacity: 1;
                    // @include transition;
                }
            }
            .title_col {
                // h3 {
                //     transform: translateX(86px);
                //     @include transition;
                // }
            }
        }
    }
}

@mixin posts_editorial {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 80px;
    .post_wrapper {
        .image_wrapper {
            //  todo: make dynamic
            aspect-ratio: 18 / 9;
            margin-bottom: 40px;
        }
        grid-column: 1 / span 3;
        &:nth-child(2) {
            grid-column: 3 / span 2;
        }
        &:nth-child(2) {
            grid-column: 2/ span 4;
        }
        .text_wrapper {
            display: flex;
            justify-content: end;
            align-items: center;
            gap: 40px;
            @include transition;
            .arrow {
                position: relative;
                right: 0;
                max-width: 40px;
                @include transition;
            }
        }
        &:hover {
            .image_wrapper img {
                transform: scale(1.2);
            }
            .text_wrapper .arrow {
                right: -20px;
                @include transition;
            }
        }
    }
}



/* #Fade Ins & Transitions
================================================== */
// I can't get this to work without the 'important' class!
@mixin fade_in_delay($delay) {
    transition-delay: $delay !important;
}

@for $i from 1 through 24 {
    .fade-delay-#{$i} {
        @include fade_in_delay(0.1s * $i);
    }
}

@mixin fade_in_container {
    .container {
        opacity: 0;
        transform: translate(0, 10vh);
        @include transition;
    }
    &.visible {
        .container{
            opacity: 1;
            transform: translate(0, 0);
            @include transition;    
        }
    }
}

@mixin fade_in_element {
    opacity: 0;
    transform: translate(0, 10vh);
    @include transition;
    &.visible {
        opacity: 1;
        transform: translate(0, 0);
        @include transition;    
    }
}

.fade_in_element {
    @include fade_in_element;
}

.fade_in_container {
    @include fade_in_container;
}

// seprate class for this, because the animation is part of a larger sequence of them
.landing_page_header_fade {
    // this is the same as fade_in_element, but with a longer transition
    opacity: 0;
    transform: translate(0, 10vh);
    @include longtransition;
    &.visible {
        opacity: 1;
        transform: translate(0, 0);
        @include longtransition;    
    }
}

@mixin fade_bottom{
    opacity: 0;
    transform: translate(0, 10vh);
    @include transition;
    @include fade_in_delay(0.5s);
    &.fade_bottom{
        opacity: 1;
        transform: translate(0, 0);
        @include transition;   
        @include fade_in_delay(0.5s);         
    }
}

@mixin fade_top{
    opacity: 0;
    transform: translate(0, -10vh);
    @include transition;
    &.fade_top{
        opacity: 1;
        transform: translate(0, 0);
        @include transition;            
    }
}

.parallax {
//   transform: translateY(0); /* Initialize to no transformation */
//   transition: transform 0.3s ease-in-out; /* Smooth scrolling effect */
}



// animation stlying
// here we write added styles that are neccessary for the animations to appear properly

@mixin animations {
    display: flex;
    flex-wrap: wrap;
    row-gap: 0px;
}

// 

.ani_background_reveal {
    height: 0%;
}
.ani_letterwave, 
.ani_wordwave, 
.ani_fade_up,
.ani_fade_up_fold,
.ani_fade_up_letter,
.ani_fade_up_fold_top_level {
    @include animations;
}

.ani_fade_up_fold, .ani_fade_up, .ani_fade_up_fold_top_level {
// these attributes are neccessary for this animation to work
    .word_wrap {
        overflow: hidden;
        position: relative;
        // background-color: black;
        // @include transition;
        // line-height: 10.5rem;
        // this is important -> corrective styles for animated text
        //  the webfonts are misaligned
        // max-height: 58px;
        // max-height: 64px;
        // @include respond-to('md') {
        //     max-height: 118px;
        // }
        // @include respond-to('xl') {
        //     max-height: 162px;
        // }
        .word {
            // background-color: black;
            position: relative;
            display: inline-flex;
            // @include shorttransition;
            // @include respond-to('lg') {
            //     max-height: 162px;
            // }
        }
    }
}

// make sure these are hidden initially
.ani_fade_up, .ani_fade_up_fold, .ani_fade_up_fold_top_level {
    transform: translateY(100px);
    opacity: 0;
    @include shorttransition;
    &.reveal {
        transform: translateY(0px);
        opacity: 1;
        @include shorttransition;
    }
}

/* #Transforms
================================================== */

@mixin rotate($degrees) {
    -webkit-transform: rotate($degrees);
    -moz-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    -o-transform: rotate($degrees);
    transform: rotate($degrees);
}

@mixin scale($ratio) {
  -webkit-transform: scale($ratio);
     -moz-transform: scale($ratio);
      -ms-transform: scale($ratio);
       -o-transform: scale($ratio);
          transform: scale($ratio);
}


/* #Buttons
================================================== */

// simplest button, just an underline with a hover



@mixin buttonsimple {
    @include body;
    border: none;
    width: fit-content;
    cursor: pointer;
    text-decoration: none;
    color: $darkNavy;

    &:hover {
        text-decoration: none;
    }
}

.btn_simple {
    @include buttonsimple;
}

@mixin btn_no_style{
    @include body;
    background-color: white;
    border: none;
    line-height: 127%;
    cursor: pointer;

}

@mixin btn_plain{
    @include body;
    @include buttonsimple;
    @include border_radius;
    color: white;
    background-color: $cobaltBlue;
    font-weight: 500;
    padding: 0.23rem 0.91rem 0.23rem 0.91rem;
    display: inline-flex;
    height: 2.045rem;
    width: fit-content;
    align-items: center;
    gap: 1.2em;
    margin-right: 0.41rem;
    position: relative; 

}

@mixin btn_plain_deselected{
    @include body;
    @include buttonsimple;
    @include border_radius;
    color: $midGrey;
    background-color: $lightGrey;
    font-weight: 500;
    padding: 0.23rem 0.91rem 0.23rem 0.91rem;
    display: inline-flex;
    height: 2.045rem;
    width: fit-content;
    align-items: center;
    gap: 1.2em;
    margin-right: 0.41rem;
    position: relative; 

}

@mixin btn_plain_deselected_dropdown{
    @include btn_plain_deselected;
    width: max-content;
    padding: 1.3em 0 1.3em 1.5em;

    &:after{
        content: "";
        display: inline-block; 
        background-image: url('/assets/images/svg/chevron-down-dark.svg'); 
        background-size: contain; 
        background-repeat: no-repeat;
        height: 0.5rem;
        width: 1rem;
        margin-right: 1.5em;
        

       
    }
}


.btn_plain_wide{
    @include btn_plain;
}

@mixin btn_plain_wide{
    @include body;
    @include buttonsimple;
    @include border_radius;
    background-color: transparent;
    border: 1px solid $darkNavy;
    font-weight: 500;
    padding: 0.31rem 2em 0.31rem 2em;
    display: inline-flex;
    // height: 2.045rem;
    width: fit-content;
    align-items: center;
    // gap: 1.2em;
    margin-right: 0.41rem;
    position: relative; 
    margin-bottom: 0.5em;

}

.btn_plain_wide{
    @include btn_plain;
}

@mixin btn{
    @include buttonsimple;
    @include border_radius;
    font-weight: 500;
    padding: 0.23rem 0.23rem 0.23rem 0.91rem;
    display: inline-flex;
    height: 2.045rem;
    width: fit-content;
    align-items: center;
    gap: 1.2em;
    margin-right: 0.41rem;
    position: relative; 

    .btn-arrow-container {
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        background-color: white;
        align-self: stretch;
        height: 100%;
        aspect-ratio: 1;
        @include border_radius;
        overflow: hidden; /* Hide any content that moves outside */
    }

    /* Initial arrow inside the container (this is ::after) */
    .btn-arrow-container::after {
        content: "";
        display: inline-block; 
        background-image: url('/assets/images/svg/arrow-right.svg'); 
        background-size: auto; 
        background-repeat: no-repeat;           
        background-position: center;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 50%; /* Start centered */
        transform: translateX(-50%); /* Adjust the exact center alignment */
        transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    /* Replacement arrow (this is ::before) */
    .btn-arrow-container::before {
        content: "";
        display: inline-block;
        background-image: url('/assets/images/svg/arrow-right.svg');
        background-size: auto;
        background-repeat: no-repeat;
        background-position: center;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: -100%; /* Initially out of view on the left */
        opacity: 0; /* Initially hidden */
        transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    /* Hover effect on the button */
    &:hover .btn-arrow-container::after {
        transform: translateX(100%);  /* Move arrow to the right */
        opacity: 0;  /* Fade out */
    }

    &:hover .btn-arrow-container::before {
        left: 50%;   /* Move the arrow into the container from the left */
        transform: translateX(-50%); /* Center it */
        opacity: 1;  /* Make the second arrow visible */
    }
}

.btn{
    @include btn;
}

@mixin btnvtwo{
    @include buttonsimple;
    @include border_radius;
    background-color: transparent;
    font-weight: 400;
    display: flex;
    height: 1.18rem;
    width: 100%;
    align-items: center;
    gap: 1.2em;
    position: relative; 
    text-decoration: underline;
    padding: 0;

    &:hover{
        text-decoration: underline;
        font-weight: 500;
    }

    .btn-arrow-container {
        margin-left: auto;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        background-color: aquamarine;
        align-self: stretch;
        height: 100%;
        aspect-ratio: 1;
        @include border_radius;
        overflow: hidden; /* Hide any content that moves outside */
    }

    /* Initial arrow inside the container (this is ::after) */
    .btn-arrow-container::after {
        content: "";
        display: inline-block; 
        background-image: url('/assets/images/svg/arrow-right.svg'); 
        background-size: 38%; 
        background-repeat: no-repeat;           
        background-position: center;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 50%; /* Start centered */
        transform: translateX(-50%); /* Adjust the exact center alignment */
        transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    /* Replacement arrow (this is ::before) */
    .btn-arrow-container::before {
        content: "";
        display: inline-block;
        background-image: url('/assets/images/svg/arrow-right.svg');
        background-size: 38%;
        background-repeat: no-repeat;
        background-position: center;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: -100%; /* Initially out of view on the left */
        opacity: 0; /* Initially hidden */
        transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    /* Hover effect on the button */
    &:hover .btn-arrow-container::after {
        transform: translateX(100%);  /* Move arrow to the right */
        opacity: 0;  /* Fade out */
    }

    &:hover .btn-arrow-container::before {
        left: 50%;   /* Move the arrow into the container from the left */
        transform: translateX(-50%); /* Center it */
        opacity: 1;  /* Make the second arrow visible */
    }
}

.btn-vtwo{
    @include btnvtwo;
}

@mixin btnvthree{
    @include buttonsimple;
    @include border_radius;
    background-color: transparent;
    font-weight: 400;
    display: flex;
    height: 2.5rem;
    width: 100%;
    align-items: center;
    gap: 1.2em;
    position: relative; 
    text-decoration: underline;
    padding: 0;

    &:hover{
        text-decoration: underline;
        font-weight: 500;
    }

    .btn-arrow-container {
        margin-left: auto;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        background-color: aquamarine;
        align-self: stretch;
        height: 100%;
        aspect-ratio: 1;
        @include border_radius;
        overflow: hidden; /* Hide any content that moves outside */
    }

    /* Initial arrow inside the container (this is ::after) */
    .btn-arrow-container::after {
        content: "";
        display: inline-block; 
        background-image: url('/assets/images/svg/arrow-right.svg'); 
        background-size: 38%; 
        background-repeat: no-repeat;           
        background-position: center;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 50%; /* Start centered */
        transform: translateX(-50%); /* Adjust the exact center alignment */
        transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    /* Replacement arrow (this is ::before) */
    .btn-arrow-container::before {
        content: "";
        display: inline-block;
        background-image: url('/assets/images/svg/arrow-right.svg');
        background-size: 38%;
        background-repeat: no-repeat;
        background-position: center;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: -100%; /* Initially out of view on the left */
        opacity: 0; /* Initially hidden */
        transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    /* Hover effect on the button */
    // &:hover .btn-arrow-container::after {
    //     transform: translateX(100%);  /* Move arrow to the right */
    //     opacity: 0;  /* Fade out */
    // }

    // &:hover .btn-arrow-container::before {
    //     left: 50%;   /* Move the arrow into the container from the left */
    //     transform: translateX(-50%); /* Center it */
    //     opacity: 1;  /* Make the second arrow visible */
    // }
}

.btn-vthree{
    @include btnvthree;
}

@mixin btn-gallery{
    background-color: transparent;
    border: 1px solid $darkNavy;
    gap: 0.3rem;
    font-weight: 400;
}

@mixin btn-prev{

    @include buttonsimple;
    @include border_radius;
    @include btn-gallery;
    font-weight: 400;
    gap: 0.5em;

    padding: 0.5em 0.4em 0.5em 0.4em;
    display: inline-flex;
    align-items: center;
    margin-right: 0.3em;
    
    &:before{
        content: "";
        display: inline-block; 
        background-image: url('/assets/images/svg/arrow-straight-prev.svg'); 
        background-size: contain; 
        background-repeat: no-repeat;
        height: 11px;
        width: 10px;
        margin-left: 0.4em;
  
    }
}

.btn-prev{
    @include btn-prev;
}

@mixin btn-next{

    @include buttonsimple;
    @include border_radius;
    @include btn-gallery;
    font-weight: 400;

    padding: 0.5em 0.3em 0.5em 1em;
    display: inline-flex;
    align-items: center;
    gap: 0.5em;
    margin-right: 0.3em;
    
    &:after{
        content: "";
        display: inline-block; 
        background-image: url('/assets/images/svg/arrow-straight-next.svg'); 
        background-size: contain; 
        background-repeat: no-repeat;
        height: 11px;
        width: 10px;
        margin-right: 0.4em;
        

       
    }
}

.btn-next{
    @include btn-next;
}

@mixin btn-menu{
    @include border_radius;
    @include bodyLarge;
    border: none;
    font-weight: 500;
    padding: 0.55em 1.4em;
    cursor: pointer;
}

// standard fade/border hover button for common <a> tags
@mixin buttonanchor {
    @include transition;
    display: block;
    font-weight: 600;
    transform: translateX(0px);
    @include transition;
    &:before {
        content: '';
        // background-image: url(./assets/images/svg/arrow-right-white.svg);
        background-size: 60%;
        background-repeat: no-repeat;
        background-position: center;
        height: 37px;
        width: 65px;
        position: absolute;
        left: -66px;
        @include transition;
        @include respond-to('md') {
            height: 100%;
            left: -64px;
        }
    }
    &:hover {
        transform: translateX(56px);
        @include transition;
    }
}
.btn_anchor {
    @include buttonanchor;
}

// pill-shaped button with arrow effect either side 
@mixin buttondefault {
    white-space: nowrap;
    position: relative;
    display: inline-flex;
    align-items: center;
    overflow: hidden;
    gap: 10px;
    text-decoration: none;
    text-transform: capitalize;
    padding: 4px 20px;
    background-color: grey;
    font-weight: 500;
    border: 1px transparent solid;
    @include border_radius;
    @include shorttransition;
    &:before {
        content: '';
        // background-image: url(./assets/images/svg/arrow-right-white.svg);
        background-size: contain;
        background-repeat: no-repeat;
        max-height: fit-content;
        display: inherit;
        height: 15px;
        width: 30px;
        margin-top: 9px;
        position: absolute;
        top: 0;
        z-index: 2;
        transform: translateX(-150%);
        @include shorttransition;
    }
    &:after {
        content: '';
        // background-image: url(./assets/images/svg/arrow-right-white.svg);
        background-size: contain;
        background-repeat: no-repeat;
        display: block;
        height: 15px;
        width: 30px;
        position: relative;
        top: 1px;
        transform: translateX(0%);
        @include shorttransition;
    }
    span {
        transform: translateX(0%);
        @include shorttransition;
        color: white;
    }
    &:hover {
        &:before {
            transform: translateX(0%);
            @include shorttransition;
        }
        &:after {
            transform: translateX(200%);
            @include shorttransition;
        }
        span {
            transform: translateX(56%);
            @include shorttransition;
        }
    }
}
.btn_default {
    @include buttondefault;
}

// arrows either side  & underline button
// ** must add inline <img src="arrow"> tag into <a> tag! **
// we do this instead of :before/:after becaause real space > absolute space.
@mixin buttonsecond {
    position: relative;
    display: inline-flex;
    align-items: center;
    text-decoration: none;
    text-transform: uppercase;
    margin: 20px 0 10px 0;
    min-width: 140px;
    font-size: 30px;
    font-weight: 500;
    letter-spacing: -2px;
    width: fit-content;
    @include respond-to('lg') {
        // min-width: 222px;
        font-size: 42px;
    }
    overflow: hidden;
    @include shorttransition;
    span {
        min-height: 60px;
        display: inline-flex;
        align-items: center;
        img {
            height: 28px;
            margin-left: 10px;
            width: 24px;
            top: -1px;
            position: relative;
            right: 0;
            @include respond-to('md') {
                width: 44px;
                margin-left: 14px;
                top: -2px;
            }
        }
        @include shorttransition;
    }
    // arrow before
    &:before {
        content: '';
        // background-image: url(./assets/images/svg/arrow-right-white.svg);
        background-size: contain;
        background-repeat: no-repeat;
        display: inherit;
        height: 28px;
        width: 34px;
        position: absolute;
        left: 0;
        top: 16px;
        transform: translateX(-150%);
        @include respond-to('md') {
            width: 44px;
            top: 15px;
        }
        @include shorttransition;
    }
    // underline
    &:after {
        content: '';
        background-color: white;
        display: block;
        height: 4px;
        width: 0%;
        position: absolute;
        left: 0;
        bottom: 6px;
        @include shorttransition;
    }
    // hover
    &:hover {
        &:before {
            transform: translateX(0%);
            @include shorttransition;
        }
        &:after {
            // transform: translateX(200%);
            width: 100%;
            @include shorttransition;
        }
        span {
            @include respond-to('md') {
                // transform: translateX(48px);
                transform: translateX(55px);
            }
            transform: translateX(43px);
            @include shorttransition;
            img {
                transform: translateX(155%);
                @include shorttransition;
            }
        }
    }
}
.btn_second{
    @include buttonsecond;
}

// arrow rotate button
// ** must add inline <img src="arrow"> tag into <a> tag! **
// we do this instead of :before/:after becaause real space > absolute space.
@mixin buttonthird {
    position: relative;
    text-decoration: none;
    width: fit-content;
    height: auto;
    border-bottom: 2px solid transparent;
    @include transition;
    img {
        width: 10px;
        height: 10px;
        // push it up slightly
        margin-bottom: 1px;
        @include transition;
    }
    &:hover {
        border-bottom: 2px solid black;
        img {
            transform: rotate(45deg);
            @include transition;
        }
        &:after {
            width: 100%;
            @include transition;
        }
    }
}
.btn_third {
    @include buttonthird;
}

// pill-shaped button
@mixin buttonfourth{
    position: relative;
    text-decoration: none;
    border: 1px white solid;
    padding: 0px 10px;
    font-size: 12px;
    @include respond-to('xl') {
        font-size: 14px;
    }
    @include border_radius;
    @include shorttransition;
    &:hover {
        background-color: grey;
        color: white;
        @include shorttransition;
    }
}
.btn_fourth {
    @include buttonfourth;
}

/* # Padding solutions
================================================== */

@mixin textboxpad{
    width:90%;
    padding: 5vh 0;
    margin: 0 auto;
    @include respond-to('md'){
        padding: 10vh 0;
        width:60%;
        margin: 0 auto;
    }
}

@mixin textboxsmallpad {
    width:90%;
    padding: 0vh 0;
    margin: 0 auto;
    @include respond-to('md'){
        padding: 0vh 0;
        width:60%;
        margin: 0 auto;
    }
}


/* #Forms & Input fields
================================================== */

@mixin input{
    border: none;
    padding: 0.5em;
    text-indent: 0.2em;
    background-color: white;
    @include body;
    @include border_radius;
}

.input{
    @include input;
}

@mixin input_field_default {
    border: none;
    display: block;
    background-color: $offwhite;
    width: 80%;
    // todo: use container padding? if we go down the padding route with the container?
    // seems that the rendered input fields don't care about the screen widths..
    padding: 5px 2.5%;
    margin-bottom: 15px;
    color: black;
    border-radius: 20px;
}

@mixin input_field_second {
    border: 3px solid $offwhite;
    display: block;
    background-color: black;
    width: 90%;
    // todo: use container padding? if we go down the padding route with the container?
    // seems that the rendered input fields don't care about the screen widths..
    padding: 10px 5%;
    margin: 0;
    color: white;
    border: solid 1px $grey;
    border-radius: 20px;
}


/* #Component Styles
================================================== */
@mixin partners_list {
    padding: 60px 0;
    display: flex;
    flex-wrap: nowrap;
    gap: 24px;
    justify-content: space-between;
    @include respond-to('md') {
        padding: 20px 0 0px 0;
        justify-content: space-evenly;
    }
    @include respond-to('lg') {
        padding: 40px 0 00px 0;
        justify-content: space-evenly;
    }
    @include respond-to('xl') {
        padding: 60px 0 0px 0;
        justify-content: space-evenly;
    }
    
    img {
        max-width: 120px;
        max-height: 80px;
        @include respond-to('lg') {
            max-width: 150px;
            max-height: 80px;
        }
    }
}

@mixin glance_box {
    @include border_radius_small;
    border-radius: 10px;
    overflow: hidden;
    height: fit-content;
    padding: 8px;
    border: solid 1px $grey;
    justify-self: end;
    @include respond-to('lg') {
        padding: 12px;
    }

    .glance_box_title_wrap {
        img {
            @include border_radius_small;
            max-width: 40px;
        }
        text-transform: uppercase;
        display: flex;
        align-items: center;
        gap: 20px;
        margin-bottom: 20px;
    }
    li {
        font-size: 14px;
        line-height: 20px;
        list-style-type: '+  ';
    }
}

/* #Dark Mode & Colours
================================================== */

@mixin dark_mode {
    background-color: black;
    @include transition;
    header li a{
        color: white;
        @include transition;
    }
    section {
        @include transition;
        background-color: black;
        h1, h2, h3, h4, h5, h6, p, a, ul, li, label{
            color: white;
            border-color: white;
            img {
                filter: invert(1);
            }
        }
        div {
            color: white;
            .slick-dots button {
                filter: invert(1);
            }
        }
    }
    .icon, ::before, ::after {
        filter: invert(1);
        @include transition;
    }
}


@mixin light_mode {
    body {
        background-color: white !important;
    }
    .logo img {
        filter: invert(1);
    }
    .menu_icon_wrap {
        background-color: #f5f5f58c !important;
        .analogue_clock {
            border-color: black !important;
            i {
                background-color: black !important;
            }
        }
        #clock, #location {
            color: black !important;
        }
    }
    main {
        background-color: white;
        @include longtransition;
    }
    // overwritig both the standard and conditional styles, 
    // as the footer behaviour is controlled with addClass
    footer {
        // added when at the top of the viewport
        &.black {
            @include longtransition;
            background-color: white;
            @include longtransition;
            &:before {
                background-color: white;
                @include longtransition;
            }
        }
    }
    section {
        // may need to put this back...
        background-color: white;
        @include longtransition;
        h1,h2,h3,h4,h5,h6,p,a, li {
            color: grey;
            border-color: grey;
            // background-color: white !important;
            @include transition;
        }
        border-bottom-left-radius: 0px;
        border-bottom-right-radius: 0px;
    }
    .bulletin_bar_projects_wrap {
        label {
            border-color: grey !important;
        }
    }
    // revert these back to normal
    // todo: change it so you don't have to do this
    .other_posts {
        background-color: black;
        border-color: white;
        h1,h2,h3,h4,h5,h6,p,a, .word_wrap, .word {
            color: white;
            border-color: white;
            // background-color: black !important;
        }
    }
    .bulletin_bar {
        a, p, div {
            color: grey;
        }
    }
    .section_posts_agg {
        .post_row {
            &:hover {
                background-color: #624e4e1f !important;
                @include longtransition;
            }
            .post-title::before {
                filter: invert(1) !important;
                @include longtransition;
            }
        }
    }
    ::selection {
        background: grey;
        color: grey;
    }    
}

body[data-theme='dark'] {
    // no styles - standard
}

body[data-theme='light'] {
    @include light_mode;
}


// body {
//     @include transition;
//     // &.dark_mode {
//     //     @include dark_mode;
//     //     @include transition;
//     // }
//     &.light_mode {
//         @include light_mode;
//         @include transition;
//     }
// }





// these are for overwriting default dark mode colours
// set the arguments to custom colours 
@mixin arm_dark_mode($bg_color, $color, $border_color) {
    background-color: $bg_color;
    color: $color;
    border-color: $border_color;
    * {
        background-color: $bg_color;
        color: $color;
        border-color: $border_color;
    
    }
}

/* # - other?
================================================== */

@mixin slick_arrows {
    .slick-prev {
        left: 10px;
        width: 60px;
        &:before {
            content: url('./assets/images/svg/arrow-back.svg');
            color: black;
        }
    }
    .slick-next {
        right: 10px;
        width: 60px;
        &:before {
            content: url('./assets/images/svg/arrow-next.svg');
            color: black;
        }
    }
}

@mixin slick_dots {
    .slick-dots {
        left: 0;
        width: 100%;
        text-align: center;
        button {
            border-color: black;
        }
        .slick-active {
            button {
                background-color: black;
            }
        }
        &.arm_dark_mode {
            // overwrite default dark mode styles here
            button {
                // @include arm_dark_mode($bg_colour, $color, $border_colour);
            };
            .slick-active {
                button {
                    // background-color: white;
                }
            }
        }
    }
}

// todo: what is this? 
@mixin slidebg{
    width: calc(100% - 60px);
    backdrop-filter: blur(5px);
    background-color: $offwhite;
    padding: $px30;
    margin: 0%;
    text-align: center;
    @include border_radius;
    @include respond-to('md'){
        text-align: left;
        padding: $px30 $px50;
        width: 100%;
        margin: 0;
        position: absolute;
        z-index: 200;
        width:50%;
        &.overleft{
            left:0;
        }
        &.overright{
            right:0;
        }
        &.overcenter{
            left:25%;
        }
    }
    a.button{
        @include buttonsecond;
    }
}

.relative{
    position: relative;
}

@mixin title_tag($textColour, $dotColour) {
    @include h-five;
    text-transform: uppercase;
    color: $textColour;
    margin-bottom: $px15;
    position: relative;
    padding-left: 0.59727rem;
    text-indent: -0.59727rem;

    &:before{
        height: 0.22727rem;
        width: 0.22727rem;
        content: '';
        vertical-align: middle;
        border-radius: 0.75rem;
        display: inline-block;
        margin-right: 0.37rem;
        background-color:$dotColour;


    } 
}

@mixin mobile_text_col_spacing{
    .title-tag{
        margin-bottom: 2em;
    }
    .heading{
        margin-bottom: 0.8em;
    }
    .body{
        margin-bottom: 1.5em;
    }
    a.btn{
        margin: 0.7em 0 1.5rem 0;
    }
}

@mixin caption{
    @include h-five;
    padding: 0.9em 0.85em;
    
}

@mixin captionTwo{
    @include h-five;
    padding: 0.9em 0.85em;
    font-family: $primary-font;
    font-weight: 600;
    text-transform: none;
    
}

@mixin captionBody($colour){
    @include body;
    margin-top: 1.5em;
    font-weight: 600;
    position: relative;
    padding-left: 1.5rem;
    text-indent: -1.5rem;

    &:before{
        height: 1rem;
        width: 1rem;
        content: '';
        vertical-align: middle;
        display: inline-block;
        margin-right: .5rem;
        background-color:$colour;


    } 
}

@mixin smallArrowBefore($colour){
    &:before {
        content: "";
        display: inline-block; 
        background-image: url('/assets/images/svg/arrow-right.svg'); 
        background-size: 38%; 
        background-repeat: no-repeat;           
        background-position: center;
        background-color: $colour;
        width: 20px;
        height: 20px;
        margin-right: 1em;
        vertical-align: middle;

    }
    
}

@mixin smallArrowAfter($colour){
    &:after {
        content: "";
        display: inline-block; 
        background-image: url('/assets/images/svg/arrow-right.svg'); 
        background-size: 38%; 
        background-repeat: no-repeat;           
        background-position: center;
        background-color: $colour;
        width: 20px;
        height: 20px;
        margin-left: 1em;
        vertical-align: middle;

    }
}

@mixin tag{
    @include h-six;
    display: inline-block;
    margin-right: 0.3em;
    padding: 0.3em 0.5em;
    @include border-radius;
}

.tag{
    @include tag;
}

.caption{
    @include caption;
}

@mixin postCardDouble{
    .card-top{
        display: flex;
        justify-content: space-between;
        margin-bottom: 3rem;


        div.hand-icon-container{
            width: 33px;
            height: 51px;
        }


    }
    .card-body{
        margin-right: 3%;
        .post-info{
            margin: 3.5rem 0 3rem 0;
        }
    }
    .card-bottom{
        margin-top: 2rem;
        border-top: 1px solid $darkNavy;
        display: flex;
        justify-content: space-between;
        padding-top: 0.8rem;

        p{
            @include body;
            text-decoration: underline;
        }
    }
}

@mixin postCard{
    
    display: flex;
    flex-direction: column;
    .card-top{
        display: flex;
        justify-content: space-between;
        margin-bottom: 3rem;


        div.hand-icon-container{
            width: 33px;
            height: 51px;
        }


    }
    .card-body{
        flex-grow: 1;
        margin-right: 3%;
        .post-info{
            margin: 3.5rem 0 3rem 0;
        }
    }
    .card-bottom{
        margin-top: 2rem;
        border-top: 1px solid $darkNavy;
        display: flex;
        justify-content: space-between;
        padding-top: 0.8rem;

        p{
            @include body;
            text-decoration: underline;
        }
    }
}



/*------------------------ Card colour styles -------------------------------*/
///* Colour style for text image flexes *//
// green 

@mixin GreenStyle{
    background-color: $lightGreen;

    .title-tag{
        @include title_tag($darkNavy, $green);
    }
                    
    .tag{
        background-color: $green;
    }

    a.btn{
        background-color: $green;
    }

    a.btn:hover{
        background-color: $lightGreen;
    }

    svg path{
        fill: $green;
    }

    .caption{
        background-color: $lightGreen;
    }

    // wayfinder-rows
    .arrow-container{
        background-color: $green;
    }

    .triangle{
        background-color: $lightGreen;
    }

    // full image layout
    &.full-image-layout{
        .text-content{
            background-color: $lightGreen;
        }
    }

    // testimonial layout
    &.testimonial{

        p.quote-info{
            &:before{
                background-color:$green!important;
        
        
            } 
            
        }

    }

}

.green-style{
    @include GreenStyle;
    
}

// yellow

@mixin YellowStyle{
    background-color: $lightYellow;

    .title-tag{
        @include title_tag($darkNavy, $yellow);
    }
                    
    .tag{
        background-color: $yellow;
    }

    a.btn{
        background-color: $yellow;
    }

    .btn:hover{
        background-color: $midYellow;
        color: $darkNavy;
    }

    svg path{
        fill: $yellow;
    }

    .caption{
        background-color: $lightYellow;
    }

    // wayfinder-rows
    .arrow-container{
        background-color: $yellow;
    }

    .triangle{
        background-color: $lightYellow;
    }

    // full image layout
    &.full-image-layout{
        .text-content{
            background-color: $lightYellow;
        }
    }

    // testimonial layout
    &.testimonial{

        p.quote-info{
            &:before{
                background-color:$yellow!important;
        
        
            } 
            
        }

    }

    // staff card - team grid
    &.staff-card-wrap{
        div.team-img-wrap{
            border-bottom: .4rem solid $yellow;
        }
    }
}

.yellow-style{
    @include YellowStyle;
    
}

// mint

@mixin MintStyle{
    background-color: $lightMintGreen;

    .title-tag{
        @include title_tag($darkNavy, $mintGreen);
    }
                    
    .tag{
        background-color: $mintGreen;
    }

    a.btn{
        background-color: $mintGreen;
    }

    a.btn:hover{
        background-color: $midMintGreen;
    }

    svg path{
        fill: $mintGreen;
    }

    .caption{
        background-color: $lightMintGreen;
    }

    // wayfinder-rows
    .arrow-container{
        background-color: $mintGreen;
    }

    .triangle{
        background-color: $lightMintGreen;
    }

    // full image layout
    &.full-image-layout{
        .text-content{
            background-color: $lightMintGreen;
        }
    }

        // testimonial layout
        &.testimonial{

            p.quote-info{
                &:before{
                    background-color:$mintGreen!important;
            
            
                } 
                
            }
    
        }
}

.mint-style{
    @include MintStyle;
    
}

// blue

@mixin BlueStyle{
    background-color: $lightSkyBlue;

    .title-tag{
        @include title_tag($darkNavy, $skyBlue);
    }
                    
    .tag{
        background-color: $skyBlue;
    }

    a.btn{
        background-color: $skyBlue;
    }

    a.btn:hover{
        background-color: $midSkyBlue;
    }

    svg path{
        fill: $skyBlue;
    }

    .caption{
        background-color: $lightSkyBlue;
    }

    // wayfinder-rows
    .arrow-container{
        background-color: $skyBlue;
    }

    .triangle{
        background-color: $lightSkyBlue;
    }

        // full image layout
        &.full-image-layout{
            .text-content{
                background-color: $lightSkyBlue;
            }
        }


    
    &.full-colour-layout{
        background-color: $cobaltBlue;
        .title-tag{
            @include title_tag(white, $skyBlue);
        }
        .heading, .body{
            color: white;
        }
    }

    // testimonial layout
    &.testimonial{

        p.quote-info{
            &:before{
                background-color:$skyBlue!important;
        
        
            } 
            
        }

    }



}

.blue-style{
    @include BlueStyle;
    
}

@mixin NavyStyle{
    background-color: $lightNavy;

    .title-tag{
        @include title_tag($darkNavy, $darkNavy);
    }
                    
    .tag{
        background-color: $midNavy;
    }

    a.btn{
        background-color: $darkNavy;
        color: white;
    }

    a.btn:hover{
        background-color: $midNavy;
        color: $darkNavy;
    }


    svg path{
        fill: $darkNavy;
    }

    .caption{
        background-color: $lightSkyBlue;
    }

    // wayfinder-rows
    .arrow-container{
        background-color: $darkNavy;

        svg.arrow{
            path{
                fill: $lightNavy!important;
                
            }
        }
    }

    .triangle{
        background-color: $lightNavy;
    }


    // full image layout
    &.full-image-layout{
        .title-tag{
            @include title_tag(white, $skyBlue);
        }
        .text-content{
            background-color: $darkNavy;

            .heading, .body{
                color: white!important;
            }
            
        }
        a.btn{
            background-color: $cobaltBlue;
            color: white;
        }
        svg{
            path{
                fill: $skyBlue;
            }
        }
        
    }

    // full colour layout
    &.full-colour-layout{
        background-color: $darkNavy;
        .title-tag{
            @include title_tag(white, $skyBlue);
        }
        .heading, .body{
            color: white;
        }
        a.btn{
            background-color: $skyBlue;
            color: $darkNavy;
        }
        svg path{
            fill: $skyBlue;
        }
    }

    // testimonial layout
    &.testimonial{

        p.quote-info{
            &:before{
                background-color:$darkNavy!important;
        
        
            } 
            
        }

    }


}


.navy-style{
    @include NavyStyle;
    
}


// light colour schemes

@mixin mintScheme{


    .tag{
        background-color: $lightMintGreen;
    }
    &.wayfinder-card{
        background-color: $lightMintGreen;
        .tag{
            background-color: $mintGreen;
        }

    }
    .icon-container{
        // background-color: $lightMintGreen;
        svg path{
            fill: $mintGreen;
        }
    }
    .bars-container{
        svg path{
            fill: $mintGreen;
        }

    }
    div.team-img-wrap{
        border-bottom: .4rem solid $mintGreen;

        svg path{
            fill: $mintGreen;
        }
        

    }
    button.btn-vtwo, button.btn-vthree{
        div.btn-arrow-container{
            background-color: $mintGreen;
        }
    }

    .post-link{
        background-color: $mintGreen;
    }

    // colour version
    &.block-colour-style-card{
        background-color: $lightMintGreen;

        .text-content{
            div.btn-arrow-container{
                background-color: $mintGreen;
            }

        }

    }
    // taxonomy title - post agg
    &.taxonomy-title-container{
        background-color: $lightMintGreen;
    }
    // wellbeing goals
    .card-goal-container{
        background-color: $lightMintGreen;

    }

    // timeline scroll
    .stage_title_wrap{
        background-color: $lightMintGreen;
    }

    // timeline journey
    &.timeline_stage_journey{

        .title-tag{
            @include title_tag($darkNavy, $mintGreen);
        }

        .timeline-stage-index{
            color: $mintGreen;
        }

    }
    

}

.mint-scheme{
    @include mintScheme;
}

@mixin blueScheme{
    .tag{
        background-color: $lightSkyBlue;
    }
    &.wayfinder-card{
        background-color: $lightSkyBlue;
        .tag{
            background-color: $skyBlue;
        }

    }
    .icon-container{
        // background-color: $lightSkyBlue;
        svg path{
            fill: $skyBlue;
        }
    }
    .bars-container{
        svg path{
            fill: $skyBlue;
        }

    }
    div.team-img-wrap{
        border-bottom: .4rem solid $skyBlue;

        svg path{
            fill: $skyBlue;
        }
        

    }
    button.btn-vtwo, button.btn-vthree{
        div.btn-arrow-container{
            background-color: $skyBlue;
        }
    }

    .post-link{
        background-color: $skyBlue;
    }

    // colour version
    &.block-colour-style-card{
        background-color: $lightSkyBlue;

        .text-content{
            div.btn-arrow-container{
                background-color: $skyBlue;
            }

        }

    }
    // taxonomy title - post agg
    &.taxonomy-title-container{
        background-color: $lightSkyBlue;
    }

    // wellbeing goals
    .card-goal-container{
        background-color: $lightSkyBlue;

    }

    // timeline scroll
    .stage_title_wrap{
        background-color: $lightLightSkyBlue;
    }

    // timeline journey
    &.timeline_stage_journey{

        .title-tag{
            @include title_tag($darkNavy, $skyBlue);
        }

        .timeline-stage-index{
            color: $skyBlue;
        }

    }

}

.blue-scheme{
    @include blueScheme;
}

@mixin YellowScheme{
    .tag{
        background-color: $lightYellow;
    }
    &.wayfinder-card{
        background-color: $lightYellow;
        .tag{
            background-color: $yellow;
        }

    }
    .icon-container{
        // background-color: $lightYellow;
        svg path{
            fill: $yellow;
        }
    }
    .bars-container{
        svg path{
            fill: $yellow;
        }

    }
    div.team-img-wrap{
        border-bottom: .4rem solid $yellow;

        svg path{
            fill: $yellow;
        }
        

    }
    button.btn-vtwo, button.btn-vthree{
        div.btn-arrow-container{
            background-color: $yellow;
        }
    }

    .post-link{
        background-color: $yellow;
    }

    // colour version
    &.block-colour-style-card{
        background-color: $lightYellow;

        .text-content{
            div.btn-arrow-container{
                background-color: $yellow;
            }

        }

    }

    // taxonomy title - post agg
    &.taxonomy-title-container{
        background-color: $lightYellow;
    }

    // wellbeing goals
    .card-goal-container{
        background-color: $lightYellow;

    }

    // timeline scroll
    .stage_title_wrap{
        background-color: $lightYellow;
    }

    // timeline journey
    &.timeline_stage_journey{

        .title-tag{
            @include title_tag($darkNavy, $yellow);
        }

        .timeline-stage-index{
            color: $yellow;
        }

    }
}

.yellow-scheme{
    @include YellowScheme;
}

@mixin navyScheme{
    .tag{
        background-color: $lightNavy;
    }
    &.wayfinder-card{
        background-color: $lightNavy;
        .tag{
            background-color: $darkNavy;
            color: white;
        }

    }
    .icon-container{
        // background-color: $lightNavy;
        svg path{
            fill: $darkNavy;
        }
    }
    .bars-container{
        svg path{
            fill: $darkNavy;
        }

    }
    div.team-img-wrap{
        border-color: $darkNavy;

        svg path{
            fill: $darkNavy;
        }
        

    }
    button.btn-vtwo, button.btn-vthree{
        div.btn-arrow-container{
            background-color: $darkNavy;
        }
    }
    .post-link{
        background-color: $darkNavy;
        color: white;
    }

    // colour version
    &.block-colour-style-card{
        background-color: $lightNavy;

        .text-content{
            div.btn-arrow-container{
                background-color: $darkNavy;
            }

        }

    }

    // timeline journey
    &.timeline_stage_journey{

        .title-tag{
            @include title_tag($darkNavy, $cobaltBlue);
        }

        .timeline-stage-index{
            color: $cobaltBlue;
        }

    }


}

.navy-scheme{
    @include navyScheme;
}

@mixin greenScheme{
    .tag{
        background-color: $green;
    }
    &.wayfinder-card{
        background-color: $lightGreen;
        .tag{
            background-color: $green;
        }

    }
    .icon-container{
        // background-color: $green;
        svg path{
            fill: $green;
        }
    }
    .bars-container{
        svg path{
            fill: $green;
        }

    }
    div.team-img-wrap{
        border-color: $green;

        svg path{
            fill: $green;
        }
        

    }
    button.btn-vtwo, button.btn-vthree{
        div.btn-arrow-container{
            background-color: $green;
        }
    }
    .post-link{
        background-color: $green;
    }

    // colour version
    &.block-colour-style-card{
        background-color: $lightGreen;

        .text-content{
            div.btn-arrow-container{
                background-color: $green;
            }

        }

    }
    // taxonomy title - post agg
    &.taxonomy-title-container{
        background-color: $lightGreen;
    }

    // wellbeing goals
    .card-goal-container{
        background-color: $lightGreen;

    }
}

.green-scheme{
    @include greenScheme;
}








/*------------------------ Relative spacing to font size (margin/padding) -------------------------------*/

// Mixin to convert rem to em for any CSS property and sides
@mixin rem-to-em($property, $rem-value, $element-font-size-rem, $root-font-size-rem: 1rem, $sides: null) {
    // Convert values to unitless for clean calculations
    $rem-value-unitless: $rem-value / 1rem;
    $element-font-size-unitless: $element-font-size-rem / 1rem;
    $root-font-size-unitless: $root-font-size-rem / 1rem;
  
    // Calculate em value
    $em-value: $rem-value-unitless * calc($root-font-size-unitless / $element-font-size-unitless);
  
    // Apply em value to the specified property and sides
    @if $sides == null {
      // Apply to entire property (e.g., `margin: x em`)
      #{$property}: #{$em-value}em;
    } @else {
      // Apply to specific sides (e.g., `margin-top: x em`, `padding-left: x em`)
      @each $side in $sides {
        #{$property}-#{$side}: #{$em-value}em;
      }
    }
  }
  

  @mixin singleLargeImageCarousel{
    .splide.images-carousel{

        

        /*------------------------ Default/Mobile Styles -------------------------------*/
        
        background-color: rgba($skyBlue, 0.05);
        padding: 5vw 0 7vw 0;

        .text-container{

            padding: 0 7vw;
            margin-bottom: 4vw;


            .title-tag{
                @include title_tag($darkNavy, $cobaltBlue);
                margin-bottom: 3em;
    
            }

            .button-container{
                display: none;
            }
        }

        .splide__slide{

            div.img-wrap{
                height: 100%;
                width: auto;
            }

            img{
                height: 100%;
                width: 100%;
                object-fit: cover;
            }


            position: relative;


            p.caption{
                position: absolute;
                bottom: 1rem;
                left: 1rem;
                max-width: 13.3rem;
                @include captionTwo;
                
            }

        }

        
        /*------------------------ Desktop Styles -------------------------------*/

        &{
            @include respond-to('md'){

                
                padding-bottom: 0!important;

                div.text-container{

                    display: grid;
                    grid-template-columns: 1fr 1fr;
                    grid-template-rows: max-content;
                    column-gap: 25vw;

                    .heading{
                        grid-column: 1;
                        grid-row: 2;

                    }

                    .button-container{
                        display: block;
                        grid-column: 2;
                        grid-row: 2;
                        align-self: end;
                        justify-self: end;
                        display: flex;
                        align-items: flex-end;
                    }

                }

                

            }
        }
    }
  }

  @mixin singleLargeTileCarousel{
    .splide.single-tile-carousel{

        

        /*------------------------ Default/Mobile Styles -------------------------------*/
        
        background-color: rgba($skyBlue, 0.05);
        padding: 5vw 0 7vw 0;

        .text-container{

            padding: 0 7vw;
            margin-bottom: 4vw;


            .title-tag{
                @include title_tag($darkNavy, $cobaltBlue);
                margin-bottom: 3em;
    
            }

            .button-container{
                display: none;
            }
        }

        .splide__slide{

            div.img-wrap{
                height: 100%;
                width: auto;
            }

            img{
                height: 100%;
                width: 100%;
                object-fit: cover;
            }


            position: relative;


            p.caption{
                position: absolute;
                bottom: 1rem;
                left: 1rem;
                max-width: 13.3rem;
                @include captionTwo;
                
            }

        }

        
        /*------------------------ Desktop Styles -------------------------------*/

        &{
            @include respond-to('md'){

                
                padding-bottom: 0!important;

                div.text-container{

                    display: grid;
                    grid-template-columns: 1fr 1fr;
                    grid-template-rows: max-content;
                    column-gap: 25vw;

                    .heading{
                        grid-column: 1;
                        grid-row: 2;

                    }

                    .button-container{
                        display: block;
                        grid-column: 2;
                        grid-row: 2;
                        align-self: end;
                        justify-self: end;
                        display: flex;
                        align-items: flex-end;
                    }

                }

                

            }
        }
    }
  }

@mixin breadcrumbs{
    background-color: white;
    @include border-radius;
    padding: 0.5em 0.9em;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.5rem;
    width: fit-content;
    margin-bottom: 1.5rem;

    .home-icon{
        width: 1rem;
        height: auto;
    }
    


    a{
        @include h-five;
        text-transform: none;
        font-family: $primary-font;
        font-weight: bold;
        text-decoration: underline;

        &.current{
            font-weight: 300;
            text-decoration: none;
        }
    }

    p.root-ancestor{
        @include h-five;
        text-transform: none;
        font-family: $primary-font;
        font-weight: bold;
        

    }
}

@mixin wysiwyg{
    & > * {
        margin: 1em 0;
    }

    h1{
        @include h-one;
    }
    h2{
        @include h-two;
    }
    h3{
        @include h-three;
        color: $cobaltBlue;
    }
    h4{
        @include h-four;
    }
    h5{
        @include h-five;
    }
    h6{
        @include h-six;
    }
    p{
        @include body;
        margin-bottom: 1em;
    }
    blockquote {
        @include border-radius;
        @include body;
        background-color: $lightLightSkyBlue;
        font-weight: bold;
        padding: 0.5em 0.75em 0.55em 0.75em;

    }
      
      
    strong, b{
        font-weight: 700;
    }
    
    em, i{
        font-weight: 700;
    }
    
    
    ol, ul, li {
        @include body;
    }
    

    
    ul li {
    list-style-type:disc;
    margin-left: 1rem;
    }
    
    ol li {
    list-style-type:decimal;
    margin-left: 1rem;
        &::marker{
            @include h-one;
            @include respond-to(md){
                @include h-two;
            }
            color: $darkNavy;
        }
    }
    
    li:last-child {
    padding-bottom: 0.5rem;
    }
    
    
    a {
        color: $cobaltBlue;
        text-decoration: underline;
        position: relative;
        
        @include transition;
        &:before{
            content:"";
            height: 1px;
            width: 0%;
            position: absolute;
            bottom: 0;
            @include transition;
        }
        &:hover{
            @include transition;
            font-weight: 600;

        }
    }
}
  

